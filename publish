#!/usr/bin/env python3
import os
import subprocess
from pathlib import Path

import dotenv
import httpx

dotenv.load_dotenv(".env")
dotenv.load_dotenv(".local.env")

BASE = "https://github.gamma.bcg.com/api/v3"
REPO = "BCG/gamma-config"

gh_user = os.getenv("GITHUB_USER")
gh_token = os.getenv("GITHUB_TOKEN")


def publish():
    if not gh_token:
        print("ERROR: Missing GITHUB_TOKEN. You need a Github personal access token.")
        raise SystemExit(1)

    if not gh_user:
        print("ERROR: Missing GITHUB_USER. You need a Github personal access token.")
        raise SystemExit(1)

    cp = subprocess.run("git status -s", shell=True, check=True, stdout=subprocess.PIPE)
    dirty = cp.stdout.strip() != b""

    if dirty:
        print("ERROR: Repository is dirty")
        raise SystemExit(1)

    if "VERSION" not in os.environ:
        cp = subprocess.run(
            "git describe", shell=True, check=True, stdout=subprocess.PIPE
        )
        version = cp.stdout.strip().decode()
    else:
        version = os.getenv("VERSION")

    # build wheel
    if os.getenv("NOBUILD", "0") == "0":
        cmd = "(rm -rf build dist/* || true) && python setup.py sdist"
        env = os.environ.copy()
        env["VERSION"] = version
        subprocess.run(cmd, shell=True, check=True, env=env)

    # create a release
    auth = (gh_user, gh_token)
    body = {"tag_name": version}
    r = httpx.post(f"{BASE}/repos/{REPO}/releases", json=body, auth=auth)
    r.raise_for_status()
    upload_url = r.json()["upload_url"]
    upload_url = upload_url[: upload_url.index("{")]  # get URL up to the first {

    # upload releases
    headers = {"content-type": "application/tar+gzip"}
    for item in Path("dist").iterdir():
        print(f"Uploading: {item}")
        name = item.name
        url = upload_url + f"?name={name}"
        with item.open("rb") as fo:
            r = httpx.post(url, content=fo, headers=headers, auth=auth)
            r.raise_for_status()


publish()
