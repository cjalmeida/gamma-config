name: Build
on:
  push:
    branches:
      - master
      - feat/pdm
    tags:
      - v*

jobs:
  Build:
    runs-on: [self-hosted, linux]
    steps:
      - run: echo "${HOME}/.local/bin" >> $GITHUB_PATH
      - uses: actions/checkout@master
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@master
        with:
          python-version: "3.8"

      - name: create venv
        run: python -m venv .venv

      - name: install requirements
        run: |
          curl -sSL https://raw.githubusercontent.com/pdm-project/pdm/main/install-pdm.py | python3 -
          . .venv/bin/activate
          pdm install --dev

      - name: build / run tests
        run: |
          . .venv/bin/activate
          export PYTHONPATH=$PWD
          make build
          make lint
          make test

      - name: archive whl
        uses: actions/upload-artifact@master
        with:
          name: dist
          path: dist/*.whl

      - name: Check archives
        run: |
          . .venv/bin/activate
          twine check dist/*

      - name: Set up Node
        uses: actions/setup-node@master
        with:
          node-version: 14

      - name: Publish docs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: Github Actions
          GIT_AUTHOR_EMAIL: noreply@github.gamma.bcg.com
          npm_config_cache: ./npm-cache
        run: |
          . .venv/bin/activate
          export PYTHONPATH=$PWD
          git remote set-url origin https://git:${GITHUB_TOKEN}@github.gamma.bcg.com/${GITHUB_REPOSITORY}.git
          make publish-docs

  Publish:
    environment: pypi
    runs-on: [self-hosted, linux]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    needs: Build
    steps:
      - uses: actions/checkout@v2.4.0

      - uses: actions/download-artifact@master
        with:
          name: dist
          path: dist

      - name: Set up Python
        uses: actions/setup-python@master
        with:
          python-version: "3.8"

      - name: create venv and install deps
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install twine

      - name: Publish to GH and PyPI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          . .venv/bin/activate
          git remote set-url origin https://git:${GITHUB_TOKEN}@github.gamma.bcg.com/${GITHUB_REPOSITORY}.git
          twine check dist/*
          gh release create $GITHUB_REF_NAME --notes "New release $GITHUB_REF_NAME" dist/*
          twine upload --verbose -u __token__ -p "$$PYPY_TOKEN" dist/*
